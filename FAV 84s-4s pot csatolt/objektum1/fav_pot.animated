[Object]
Position = 0, 0, 0
States = fav_pot.b3d

;menetkar

[object]
states = fokozatkapcsolo.b3d
position = -0.025, -0.01, 4.17
rotatexfunction =  2.8 * (powerNotch/powerNotches - brakeNotchLinear/brakeNotchesLinear)
rotatexdirection = 0, 1, 0
rotatexdamping = 20, 0.7

;irányváltókar

[object]
states = reverse.b3d
position = 0.11, -0.01, 4.15
rotatexfunction = 1.00 * reverserNotch
rotatexdirection = 0, -1, 0
rotatexdamping = 20, 0.5

;Ajtók jelzése

[Object]
Position = 0, 0, 0
States = ajtojelzo_zarva_nyitva.b3d, ajtojelzo_zarva.b3d
StateFunction = floor[1-doors]

;Ajtók

;bal oldali ajtók

[Object]
Position = 0,0,0
States = ajto_bal_oldalt1.b3d
TranslateZFunction = 0.6 * leftdoors[0]

[Object]
Position = 0,0,0
States = ajto_bal_oldalt2.b3d
TranslateZFunction = -0.6 * leftdoors[0]

;jobb oldali ajtók

[Object]
Position = 0,0,0
States = ajto_jobb_oldalt1.b3d
TranslateZFunction = 0.6 * rightdoors[0]

[Object]
Position = 0,0,0
States = ajto_jobb_oldalt2.b3d
TranslateZFunction = -0.6 * rightdoors[0]

;tengelyek

[Object]
Position = 0,0.3,2
States = tengely.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

[Object]
Position = 0,0.3,-2
States = tengely.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

;karimák

[Object]
Position = 0.725,0.3,2
States = karima.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

[Object]
Position = -0.725,0.3,2
States = karima.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

[Object]
Position = 0.725,0.3,-2
States = karima.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

[Object]
Position = -0.725,0.3,-2
States = karima.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

;nagy kerék

[Object]
Position = 0.768,0.3,2
States = kerek.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

[Object]
Position = -0.768,0.3,2
States = kerek.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

[Object]
Position = 0.768,0.3,-2
States = kerek.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

[Object]
Position = -0.768,0.3,-2
States = kerek.b3d
RotateXFunction = value + mod [(speedometer * delta), 2.765] / 2.765 * 3.14 * 2

